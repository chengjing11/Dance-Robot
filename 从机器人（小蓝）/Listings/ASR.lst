C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ASR
OBJECT MODULE PLACED IN .\Objects\ASR.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE ASR.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\ASR.lst) TABS
                    -(2) OBJECT(.\Objects\ASR.obj)

line level    source

   1          #include "asr.h"
   2          #include "duoji.h"
   3          void SendDataByUart2(unsigned char dat);
   4          void SendStringByUart1(unsigned char *s);
   5          extern unsigned char cmd;
   6          extern unsigned char xdata Rec_Buf2[3]; 
   7          //-----------------------------------------------------------------
   8          void Delay2500ms()    //@11.0592MHz
   9          {
  10   1        unsigned char i, j, k;
  11   1      
  12   1        _nop_();
  13   1        _nop_();
  14   1        i = 106;
  15   1        j = 15;
  16   1        k = 131;
  17   1        do
  18   1        {
  19   2          do
  20   2          {
  21   3            while (--k);
  22   3          } while (--j);
  23   2        } while (--i);
  24   1      }
  25          void Delay5000ms()    //@11.0592MHz
  26          {
  27   1        unsigned char i, j, k;
  28   1      
  29   1        _nop_();
  30   1        _nop_();
  31   1        i = 211;
  32   1        j = 30;
  33   1        k = 11;
  34   1        do
  35   1        {
  36   2          do
  37   2          {
  38   3            while (--k);
  39   3          } while (--j);
  40   2        } while (--i);
  41   1      }
  42          void Delay10000ms()   //@11.0592MHz
  43          {
  44   1        Delay5000ms();
  45   1        Delay5000ms(); 
  46   1      }
  47          void Delay6000ms()    //@11.0592MHz
  48          {
  49   1        unsigned char i, j, k;
  50   1      
  51   1        _nop_();
  52   1        _nop_();
  53   1        i = 253;
  54   1        j = 35;
C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:22 PAGE 2   

  55   1        k = 220;
  56   1        do
  57   1        {
  58   2          do
  59   2          {
  60   3            while (--k);
  61   3          } while (--j);
  62   2        } while (--i);
  63   1      }
  64          void Delay3500ms()    //@11.0592MHz
  65          {
  66   1        unsigned char i, j, k;
  67   1      
  68   1        _nop_();
  69   1        _nop_();
  70   1        i = 148;
  71   1        j = 21;
  72   1        k = 83;
  73   1        do
  74   1        {
  75   2          do
  76   2          {
  77   3            while (--k);
  78   3          } while (--j);
  79   2        } while (--i);
  80   1      }
  81          
  82          //==============================================================
  83          void ASR_init(void)                             //ÓïÒôÊ¶±ðÄ£¿é³õÊ¼»¯
  84          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
  85   1         SendDataByUart2(0xA0);   
  86   1         SendDataByUart2(0xA0);
  87   1         SendDataByUart2(0xA0);
  88   1         IE2 |= 0x01;   // ´®¿Ú2ÖÐ¶Ï´ò¿ª  
  89   1         delay_ms(1000);
  90   1      }
  91          void ASR_init1(void)                           //ÁéÃô¶È³õÊ¼»¯
  92          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
  93   1         SendDataByUart2(0xA1);
  94   1         SendDataByUart2(0x00);
  95   1         SendDataByUart2(0x00);
  96   1         IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
  97   1         delay_ms(1000);                                                                  
  98   1      }
  99          void ASR_init2(void)                           //ÒôÁ¿ÊäÈë³õÊ¼»¯
 100          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
 101   1         SendDataByUart2(0xA2);
 102   1         SendDataByUart2(0x00);
 103   1         SendDataByUart2(0x00);
 104   1         IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
 105   1         delay_ms(1000);  
 106   1      }
 107          //Æô¶¯Á¬ÐøÓïÒôÊ¶±ðº¯Êýstart_repeatedly_Speech_Recognition()
 108          void start_repeatedly_Speech_Recognition(void)
 109          { 
 110   1        IE2 &= 0xFE;                               // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
 111   1        SendDataByUart2(0xAB);
 112   1        SendDataByUart2(0xAB);
 113   1        SendDataByUart2(0x00);
 114   1        IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
 115   1        delay_ms(1000); 
 116   1      }
C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:22 PAGE 3   

 117          //ÍË³öÓïÒôÊ¶±ð£¬½øÈëÐÝÃß×´Ì¬
 118          void ASR_end(void)                         
 119          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
 120   1         SendDataByUart2(0xAC);
 121   1         SendDataByUart2(0xAC);
 122   1         SendDataByUart2(0x00);
 123   1         IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
 124   1         delay_ms(1000);  
 125   1      }
 126          //================================================================================================
 127          void human_computer()
 128          {  
 129   1         ASR_init();                            //ÓïÒôÊ¶±ðÄ£¿é³õÊ¼»¯
 130   1         ASR_init1();                           //ÁéÃô¶È³õÊ¼»¯
 131   1         ASR_init2();                           //ÒôÁ¿ÊäÈë³õÊ¼»¯
 132   1         start_repeatedly_Speech_Recognition(); //Æô¶¯Á¬ÐøÊ¶±ð
 133   1          while(cmd!=0x01)
 134   1          { 
 135   2            if(Rec_Buf2[0]==0x5B)
 136   2            {
 137   3              delay_ms(500);                                     //µÈ´ý½ÓÊÕÈýÎ»ÊýÊý¾Ý
 138   3              EA=0;                                              //¹Ø±Õ×ÜÖÐ¶Ï
 139   3              SendDataByUart1(Rec_Buf2[0])  ;
 140   3              SendDataByUart1(Rec_Buf2[1])  ;       
 141   3              switch (Rec_Buf2[1])
 142   3              {
 143   4                case 1:P2=~0X02;
 144   4                       Delay2500ms(); 
 145   4                       P2=0X00 ;
 146   4                       break;                                     //¿ÉÒÔ
 147   4                case 2:P2=~0X03;
 148   4                       Delay5000ms();  
 149   4                       P2=0X00; 
 150   4                       break;                                     //ÎÒÊÇ17ÄêÈëÎé£¬Ä¿Ç°ÎªÖ¹£¬ÒÑ¾­ÓÐÁ½Äê¾üÁä
 151   4                case 3:P2=~0X04;
 152   4                       Delay10000ms(); 
 153   4                       P2=0X00; 
 154   4                       break;                                     //¡°²»µ±±øºó»ÚÒ»±²×Ó¡±£¬µ±±øÊ×ÏÈ¶Ô×Ô¼ºÊÇÒ»ÖÖ¶ÍÁ¶£¬Ê
             -¹ÎÒ¸ü¼ÓµÄ×ÔÂÉ£¬µ«¸üÉî²ã´ÎÊÇ¶Ô¹úÆì£¬¶Ô¹ú¼Ò£¬¶ÔÈËÃñµÄÐÅÑö¡£
 155   4                case 4:P2=~0X05;
 156   4                       Delay6000ms();  
 157   4                       P2=0X00; 
 158   4                       break;                                      //ÎÒµÄÀÏ°à³¤£¬µ±±ø¹ý³ÌÖÐ£¬ÀÏ°à³¤¾ÍÏñÒ»ÃæÆìÖÄ£¬ÒýÁì
             -ÎÒÃÇÇ°½ø¡£
 159   4                case 5:P2=~0X06;
 160   4                       Delay3500ms();  
 161   4                       P2=0X00; 
 162   4                       cmd=0x01;                                   //×¼±¸ÍË³öÓïÒôÄ£¿é
 163   4                       break;                                      //ºÃºÃÑ§Ï°£¬Îª¹úÕù¹â¡£
 164   4              }
 165   3              CLR_Buf2();
 166   3              delay_ms(200);
 167   3              EA=1;                                               //´ò¿ª×ÜÖÐ¶Ï
 168   3            }
 169   2          }
 170   1          ASR_end();                                             //ÍË³öÓïÒôÊ¶±ð
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    342    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:22 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
