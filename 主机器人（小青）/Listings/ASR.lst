C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:47 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ASR
OBJECT MODULE PLACED IN .\Objects\ASR.obj
COMPILER INVOKED BY: G:\Keil_v5\C51\BIN\C51.EXE ASR.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\ASR.lst) TABS
                    -(2) OBJECT(.\Objects\ASR.obj)

line level    source

   1          #include "asr.h"
   2          #include "duoji.h"
   3          void SendDataByUart2(unsigned char dat);
   4          void SendStringByUart1(unsigned char *s);
   5          extern unsigned char cmd;
   6          extern unsigned char xdata Rec_Buf2[3]; 
   7          extern unsigned char xdata Rec_Buf4[2];
   8          //-----------------------------------------------------------------
   9          void Delay2500ms()    //@11.0592MHz
  10          {
  11   1        unsigned char i, j, k;
  12   1      
  13   1        _nop_();
  14   1        _nop_();
  15   1        i = 106;
  16   1        j = 15;
  17   1        k = 131;
  18   1        do
  19   1        {
  20   2          do
  21   2          {
  22   3            while (--k);
  23   3          } while (--j);
  24   2        } while (--i);
  25   1      }
  26          void Delay5000ms()    //@11.0592MHz
  27          {
  28   1        unsigned char i, j, k;
  29   1      
  30   1        _nop_();
  31   1        _nop_();
  32   1        i = 211;
  33   1        j = 30;
  34   1        k = 11;
  35   1        do
  36   1        {
  37   2          do
  38   2          {
  39   3            while (--k);
  40   3          } while (--j);
  41   2        } while (--i);
  42   1      }
  43          void Delay10000ms()   //@11.0592MHz
  44          {
  45   1        Delay5000ms();
  46   1        Delay5000ms(); 
  47   1      }
  48          void Delay6000ms()    //@11.0592MHz
  49          {
  50   1        unsigned char i, j, k;
  51   1      
  52   1        _nop_();
  53   1        _nop_();
  54   1        i = 253;
C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:47 PAGE 2   

  55   1        j = 35;
  56   1        k = 220;
  57   1        do
  58   1        {
  59   2          do
  60   2          {
  61   3            while (--k);
  62   3          } while (--j);
  63   2        } while (--i);
  64   1      }
  65          void Delay3500ms()    //@11.0592MHz
  66          {
  67   1        unsigned char i, j, k;
  68   1      
  69   1        _nop_();
  70   1        _nop_();
  71   1        i = 148;
  72   1        j = 21;
  73   1        k = 83;
  74   1        do
  75   1        {
  76   2          do
  77   2          {
  78   3            while (--k);
  79   3          } while (--j);
  80   2        } while (--i);
  81   1      }
  82          
  83          //==============================================================
  84          void ASR_init(void)                             //ÓïÒôÊ¶±ðÄ£¿é³õÊ¼»¯
  85          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
  86   1         SendDataByUart2(0xA0);   
  87   1         SendDataByUart2(0xA0);
  88   1         SendDataByUart2(0xA0);
  89   1         IE2 |= 0x01;   // ´®¿Ú2ÖÐ¶Ï´ò¿ª  
  90   1         delay_ms(1000);
  91   1      }
  92          void ASR_init1(void)                           //ÁéÃô¶È³õÊ¼»¯
  93          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
  94   1         SendDataByUart2(0xA1);
  95   1         SendDataByUart2(0x00);
  96   1         SendDataByUart2(0x00);
  97   1         IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
  98   1         delay_ms(1000);                                                                  
  99   1      }
 100          void ASR_init2(void)                           //ÒôÁ¿ÊäÈë³õÊ¼»¯
 101          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
 102   1         SendDataByUart2(0xA2);
 103   1         SendDataByUart2(0x00);
 104   1         SendDataByUart2(0x00);
 105   1         IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
 106   1         delay_ms(1000);  
 107   1      }
 108          //Æô¶¯Á¬ÐøÓïÒôÊ¶±ðº¯Êýstart_repeatedly_Speech_Recognition()
 109          void start_repeatedly_Speech_Recognition(void)
 110          { 
 111   1        IE2 &= 0xFE;                               // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
 112   1        SendDataByUart2(0xAB);
 113   1        SendDataByUart2(0xAB);
 114   1        SendDataByUart2(0x00);
 115   1        IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
 116   1        delay_ms(1000); 
C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:47 PAGE 3   

 117   1      }
 118          //ÍË³öÓïÒôÊ¶±ð£¬½øÈëÐÝÃß×´Ì¬
 119          void ASR_end(void)                         
 120          {  IE2 &= 0xFE;                                // ´®¿Ú2ÖÐ¶Ï¹Ø±Õ
 121   1         SendDataByUart2(0xAC);
 122   1         SendDataByUart2(0xAC);
 123   1         SendDataByUart2(0x00);
 124   1         IE2 |= 0x01;                               // ´®¿Ú2ÖÐ¶Ï´ò¿ª
 125   1         delay_ms(1000);  
 126   1      }
 127          //================================================================================================
 128          void human_computer()
 129          {  
 130   1         ASR_init();                            //ÓïÒôÊ¶±ðÄ£¿é³õÊ¼»¯
 131   1         ASR_init1();                           //ÁéÃô¶È³õÊ¼»¯
 132   1         ASR_init2();                           //ÒôÁ¿ÊäÈë³õÊ¼»¯
 133   1         start_repeatedly_Speech_Recognition(); //Æô¶¯Á¬ÐøÊ¶±ð
 134   1          while(cmd!=0x01)
 135   1          { 
 136   2            if(Rec_Buf2[0]==0x5B)
 137   2            {
 138   3              delay_ms(500);                                     //µÈ´ý½ÓÊÕÈýÎ»ÊýÊý¾Ý
 139   3              EA=0;                                              //¹Ø±Õ×ÜÖÐ¶Ï
 140   3              SendDataByUart1(Rec_Buf2[0])  ;
 141   3              SendDataByUart1(Rec_Buf2[1])  ;       
 142   3              switch (Rec_Buf2[1])
 143   3              {
 144   4                case 1:P2=~0X11;
 145   4                       Delay2500ms(); 
 146   4                       P2=0X00 ;
 147   4                       break;                                     //¿ÉÒÔ
 148   4                case 2:P2=~0X12;
 149   4                       Delay5000ms();  
 150   4                       P2=0X00; 
 151   4                       break;                                     //ÎÒÊÇ17ÄêÈëÎé£¬Ä¿Ç°ÎªÖ¹£¬ÒÑ¾­ÓÐÁ½Äê¾üÁä
 152   4                case 3:P2=~0X13;
 153   4                       Delay10000ms(); 
 154   4                       P2=0X00; 
 155   4                       break;                                     //¡°²»µ±±øºó»ÚÒ»±²×Ó¡±£¬µ±±øÊ×ÏÈ¶Ô×Ô¼ºÊÇÒ»ÖÖ¶ÍÁ¶£¬Ê
             -¹ÎÒ¸ü¼ÓµÄ×ÔÂÉ£¬µ«¸üÉî²ã´ÎÊÇ¶Ô¹úÆì£¬¶Ô¹ú¼Ò£¬¶ÔÈËÃñµÄÐÅÑö¡£
 156   4                case 4:P2=~0X14;
 157   4                       Delay6000ms();  
 158   4                       P2=0X00; 
 159   4                       break;                                      //ÎÒµÄÀÏ°à³¤£¬µ±±ø¹ý³ÌÖÐ£¬ÀÏ°à³¤¾ÍÏñÒ»ÃæÆìÖÄ£¬ÒýÁì
             -ÎÒÃÇÇ°½ø¡£
 160   4                case 5:P2=~0X15;
 161   4                       Delay3500ms();  
 162   4                       P2=0X00; 
 163   4                       cmd=0x05;                                   //×¼±¸ÍË³öÓïÒôÄ£¿é
 164   4                       break;                                      //ºÃºÃÑ§Ï°£¬Îª¹úÕù¹â¡£
 165   4              }
 166   3              delay_ms(200);
 167   3              CLR_Buf2();
 168   3              EA=1;                                               //´ò¿ª×ÜÖÐ¶Ï
 169   3            }
 170   2          }
 171   1          ASR_end();                                             //ÍË³öÓïÒôÊ¶±ð
 172   1      }
 173          void human_computer2()
 174          { 
 175   1        SendDataByUart4(0x31);                  //Æô¶¯µÚÒ»´ÎÑÕÉ«Ê¶±ð
 176   1        SendDataByUart4(0x31);                  //Æô¶¯µÚÒ»´ÎÑÕÉ«Ê¶±ð
C51 COMPILER V9.59.0.0   ASR                                                               07/16/2024 15:05:47 PAGE 4   

 177   1        SendDataByUart4(0x31);                  //Æô¶¯µÚÒ»´ÎÑÕÉ«Ê¶±ð
 178   1        while(1)
 179   1        {  
 180   2            if (Rec_Buf4[0]==0x31||0x32||0x33)
 181   2            {
 182   3                EA=0; 
 183   3                switch (Rec_Buf4[0])
 184   3                {
 185   4                case 0x31:   SendStringByUart1("red");   P2=~0X1B; delay_ms(3500);   P2=0X00;break;    
 186   4                case 0x32:   SendStringByUart1("green"); P2=~0X1C; delay_ms(3000);   P2=0X00; break;   
 187   4                case 0x33:   SendStringByUart1("purple"); P2=~0X1D; delay_ms(3000);  P2=0X00; break;   
 188   4                }
 189   3                CLR_Buf4();
 190   3                EA=1;
 191   3                SendStringByUart4("1");             //Æô¶¯µÚÒ»´ÎÑÕÉ«Ê¶±ð
 192   3                SendStringByUart4("1");             //Æô¶¯µÚÒ»´ÎÑÕÉ«Ê¶±ð
 193   3                SendStringByUart4("1");             //Æô¶¯µÚÒ»´ÎÑÕÉ«Ê¶±ð
 194   3            }
 195   2          }
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    466    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
